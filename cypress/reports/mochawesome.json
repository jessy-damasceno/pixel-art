{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2022-03-22T02:54:26.656Z",
    "end": "2022-03-22T02:55:56.833Z",
    "duration": 90177,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d334069d-7f86-4ad0-8e45-77b76f172067",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b8263fab-409a-4c3b-af59-5b5691c63373",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 802,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "64a3c5a7-c15a-450c-be3e-414f3c3aa69a",
              "parentUUID": "b8263fab-409a-4c3b-af59-5b5691c63373",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "64a3c5a7-c15a-450c-be3e-414f3c3aa69a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 802,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "73f13f32-ba53-43fd-97b9-8ae09cc1930f",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "timedOut": null,
              "duration": 202,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "2175cf59-eabb-4dca-9710-c466fa2a1b7b",
              "parentUUID": "73f13f32-ba53-43fd-97b9-8ae09cc1930f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 222,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "ef9ad78f-2614-4dd3-8b8d-426620bab2cd",
              "parentUUID": "73f13f32-ba53-43fd-97b9-8ae09cc1930f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 200,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "f3e8cd50-fdbf-4ec2-a391-174917654611",
              "parentUUID": "73f13f32-ba53-43fd-97b9-8ae09cc1930f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 115,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "ac3b0eb6-f3d5-423c-9fac-c09c319e94bc",
              "parentUUID": "73f13f32-ba53-43fd-97b9-8ae09cc1930f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 175,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "14fde77f-a7dd-4a76-b2c8-aa53bd44372f",
              "parentUUID": "73f13f32-ba53-43fd-97b9-8ae09cc1930f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 204,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "7d62a16f-e266-462f-8456-1e6e901de298",
              "parentUUID": "73f13f32-ba53-43fd-97b9-8ae09cc1930f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 133,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "1cb77092-9504-43dc-afc7-8a1f777cce7c",
              "parentUUID": "73f13f32-ba53-43fd-97b9-8ae09cc1930f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2175cf59-eabb-4dca-9710-c466fa2a1b7b",
            "ef9ad78f-2614-4dd3-8b8d-426620bab2cd",
            "f3e8cd50-fdbf-4ec2-a391-174917654611",
            "ac3b0eb6-f3d5-423c-9fac-c09c319e94bc",
            "14fde77f-a7dd-4a76-b2c8-aa53bd44372f",
            "7d62a16f-e266-462f-8456-1e6e901de298",
            "1cb77092-9504-43dc-afc7-8a1f777cce7c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1251,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5b6efaad-defa-47b8-a189-644a53fb101e",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 223,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "a08a9836-5f36-453b-88e4-39b53e2bf61e",
              "parentUUID": "5b6efaad-defa-47b8-a189-644a53fb101e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 287,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "0969a67a-2e0d-48b5-92ce-83e7f2aa9aa2",
              "parentUUID": "5b6efaad-defa-47b8-a189-644a53fb101e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a08a9836-5f36-453b-88e4-39b53e2bf61e",
            "0969a67a-2e0d-48b5-92ce-83e7f2aa9aa2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 510,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "186708ef-32e2-42d7-aa69-dd1e55c326d5",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 141,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "f1f7aabc-513a-4f6f-95ed-9fcf6903b0bd",
              "parentUUID": "186708ef-32e2-42d7-aa69-dd1e55c326d5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 269,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "b4873685-1838-4296-8c9b-0b8df6654feb",
              "parentUUID": "186708ef-32e2-42d7-aa69-dd1e55c326d5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 285,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "38afd710-b2de-4914-b22f-ecb5977fdacb",
              "parentUUID": "186708ef-32e2-42d7-aa69-dd1e55c326d5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 203,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "f6aa97ea-0e2a-43f1-9f0a-0fed843dd2a3",
              "parentUUID": "186708ef-32e2-42d7-aa69-dd1e55c326d5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f1f7aabc-513a-4f6f-95ed-9fcf6903b0bd",
            "b4873685-1838-4296-8c9b-0b8df6654feb",
            "38afd710-b2de-4914-b22f-ecb5977fdacb",
            "f6aa97ea-0e2a-43f1-9f0a-0fed843dd2a3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 898,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0b8f6581-3794-4b82-9af7-d20ae159d0bf",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 522,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "3bfc2315-03b7-476d-b227-cf9c6ed66de2",
              "parentUUID": "0b8f6581-3794-4b82-9af7-d20ae159d0bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 501,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "125f6b59-4559-4049-a77f-e74824ea31f0",
              "parentUUID": "0b8f6581-3794-4b82-9af7-d20ae159d0bf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3bfc2315-03b7-476d-b227-cf9c6ed66de2",
            "125f6b59-4559-4049-a77f-e74824ea31f0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1023,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c90853f4-6cfd-465d-9030-7813a102cac8",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 288,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "2dfaf7b3-ebdd-4e91-85ed-e59540c66637",
              "parentUUID": "c90853f4-6cfd-465d-9030-7813a102cac8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 116,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "111e5c46-e581-489a-b3bb-fab84305e611",
              "parentUUID": "c90853f4-6cfd-465d-9030-7813a102cac8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2dfaf7b3-ebdd-4e91-85ed-e59540c66637",
            "111e5c46-e581-489a-b3bb-fab84305e611"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 404,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d93cecb2-ed5c-4cef-82dd-ea203ccfd067",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 646,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "08f870b9-f25e-49a0-ba49-4b9266728000",
              "parentUUID": "d93cecb2-ed5c-4cef-82dd-ea203ccfd067",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 10065,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "6f7f4aab-5fd3-4529-80aa-7f25089ca116",
              "parentUUID": "d93cecb2-ed5c-4cef-82dd-ea203ccfd067",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "08f870b9-f25e-49a0-ba49-4b9266728000",
            "6f7f4aab-5fd3-4529-80aa-7f25089ca116"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10711,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f5e16399-cc3b-4f09-8174-92f08323c6ef",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2480,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "7a7d3ae5-491c-4194-8b3a-47d8db105606",
              "parentUUID": "f5e16399-cc3b-4f09-8174-92f08323c6ef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 9627,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "f9b666e3-51c1-4270-ab23-508b2f561431",
              "parentUUID": "f5e16399-cc3b-4f09-8174-92f08323c6ef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1725,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "f4f0e243-bb38-42e6-935f-6a22e655a15c",
              "parentUUID": "f5e16399-cc3b-4f09-8174-92f08323c6ef",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7a7d3ae5-491c-4194-8b3a-47d8db105606",
            "f9b666e3-51c1-4270-ab23-508b2f561431",
            "f4f0e243-bb38-42e6-935f-6a22e655a15c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13832,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "dcae8f84-3c72-48ef-9cbe-2fbd38c58d23",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 217,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "844a68f9-e501-4828-a5a8-46d21647f488",
              "parentUUID": "dcae8f84-3c72-48ef-9cbe-2fbd38c58d23",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 126,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "910ed600-214c-43f8-8d5c-6e00e361317d",
              "parentUUID": "dcae8f84-3c72-48ef-9cbe-2fbd38c58d23",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 98,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "88d3eb62-f6ee-4a48-8017-c92004f7a646",
              "parentUUID": "dcae8f84-3c72-48ef-9cbe-2fbd38c58d23",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2744,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "dc1d8466-7c3f-4044-ad6d-f1c358657226",
              "parentUUID": "dcae8f84-3c72-48ef-9cbe-2fbd38c58d23",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "844a68f9-e501-4828-a5a8-46d21647f488",
            "910ed600-214c-43f8-8d5c-6e00e361317d",
            "88d3eb62-f6ee-4a48-8017-c92004f7a646",
            "dc1d8466-7c3f-4044-ad6d-f1c358657226"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3185,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0e18e2f6-0002-4578-90c8-bd7ab4192949",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4511,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33991/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33991/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33991/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33991/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33991/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33991/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33991/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33991/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33991/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33991/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33991/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33991/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33991/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e90b7281-1d84-4934-a58b-befbecdd869d",
              "parentUUID": "0e18e2f6-0002-4578-90c8-bd7ab4192949",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4664,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:33991/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33991/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33991/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33991/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33991/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33991/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33991/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33991/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33991/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33991/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33991/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33991/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33991/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "4c423688-8194-459d-aa53-1cecc4355741",
              "parentUUID": "0e18e2f6-0002-4578-90c8-bd7ab4192949",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4560,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:33991/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33991/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33991/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33991/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33991/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33991/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33991/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33991/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33991/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33991/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33991/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33991/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33991/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ee99ae10-8faf-4888-b904-ac5f778645e6",
              "parentUUID": "0e18e2f6-0002-4578-90c8-bd7ab4192949",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4515,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:33991/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33991/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33991/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33991/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33991/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33991/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33991/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33991/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33991/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33991/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33991/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33991/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33991/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "aef259b7-4d59-44b9-91b1-356c5a318689",
              "parentUUID": "0e18e2f6-0002-4578-90c8-bd7ab4192949",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4759,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33991/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33991/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33991/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33991/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33991/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33991/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33991/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33991/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33991/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33991/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33991/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33991/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33991/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b0682ff7-0a87-4c80-92c0-0bbac652f69d",
              "parentUUID": "0e18e2f6-0002-4578-90c8-bd7ab4192949",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4585,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33991/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33991/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33991/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33991/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33991/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33991/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33991/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33991/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33991/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33991/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33991/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33991/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33991/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c72b4ab0-652d-402c-a577-5162f496e352",
              "parentUUID": "0e18e2f6-0002-4578-90c8-bd7ab4192949",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4497,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:33991/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33991/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33991/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33991/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33991/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33991/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33991/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33991/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33991/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33991/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33991/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33991/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33991/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "768145f3-d254-4e7f-9a76-994a5d63d67d",
              "parentUUID": "0e18e2f6-0002-4578-90c8-bd7ab4192949",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4645,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33991/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33991/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33991/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33991/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33991/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33991/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33991/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33991/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33991/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33991/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33991/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33991/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33991/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "7f7c0103-68ae-48cc-b84d-12d70e426675",
              "parentUUID": "0e18e2f6-0002-4578-90c8-bd7ab4192949",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4584,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33991/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33991/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33991/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33991/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33991/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33991/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33991/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33991/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33991/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33991/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33991/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33991/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33991/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "90b7b33d-bfab-4967-ac18-c731b392a8b0",
              "parentUUID": "0e18e2f6-0002-4578-90c8-bd7ab4192949",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "e90b7281-1d84-4934-a58b-befbecdd869d",
            "4c423688-8194-459d-aa53-1cecc4355741",
            "ee99ae10-8faf-4888-b904-ac5f778645e6",
            "aef259b7-4d59-44b9-91b1-356c5a318689",
            "b0682ff7-0a87-4c80-92c0-0bbac652f69d",
            "c72b4ab0-652d-402c-a577-5162f496e352",
            "768145f3-d254-4e7f-9a76-994a5d63d67d",
            "7f7c0103-68ae-48cc-b84d-12d70e426675",
            "90b7b33d-bfab-4967-ac18-c731b392a8b0"
          ],
          "pending": [],
          "skipped": [],
          "duration": 41320,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "57cbe077-7f49-4e6f-a020-33619c480924",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4524,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33991/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33991/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33991/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33991/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33991/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33991/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33991/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33991/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33991/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33991/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33991/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33991/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33991/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "157e2f49-6fbf-4564-be6c-9b231da34176",
              "parentUUID": "57cbe077-7f49-4e6f-a020-33619c480924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4568,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33991/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33991/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33991/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33991/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33991/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33991/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33991/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33991/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33991/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33991/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33991/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33991/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33991/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "057cc0a1-9266-44a5-8cf5-88e45bba039f",
              "parentUUID": "57cbe077-7f49-4e6f-a020-33619c480924",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4580,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33991/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33991/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33991/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33991/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33991/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33991/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33991/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33991/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33991/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33991/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33991/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33991/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33991/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "44d9232e-80b3-4faf-bffc-247944104dae",
              "parentUUID": "57cbe077-7f49-4e6f-a020-33619c480924",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "157e2f49-6fbf-4564-be6c-9b231da34176",
            "057cc0a1-9266-44a5-8cf5-88e45bba039f",
            "44d9232e-80b3-4faf-bffc-247944104dae"
          ],
          "pending": [],
          "skipped": [],
          "duration": 13672,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e940050e-01c4-4829-9d5e-51c51e773002",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 593,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:33991/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:33991/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:33991/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:33991/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:33991/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:33991/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:33991/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:33991/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33991/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33991/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:33991/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33991/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33991/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33991/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "3f78a5e5-e0b6-4bac-b1e0-30ea3402aee3",
              "parentUUID": "e940050e-01c4-4829-9d5e-51c51e773002",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 592,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:33991/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:33991/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:33991/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:33991/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:33991/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:33991/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:33991/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:33991/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33991/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33991/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:33991/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33991/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33991/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33991/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "7dc5381a-f260-4f56-a34a-168edaf9953e",
              "parentUUID": "e940050e-01c4-4829-9d5e-51c51e773002",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "3f78a5e5-e0b6-4bac-b1e0-30ea3402aee3",
            "7dc5381a-f260-4f56-a34a-168edaf9953e"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1185,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}